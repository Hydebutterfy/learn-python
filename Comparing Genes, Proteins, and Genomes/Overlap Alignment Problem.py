

def LCSBackTrack(v, w):
    n = len(v)
    m = len(w)
    s = [[0 for j in range(m + 1)] for i in range(n + 1)]

    Backtrack = [["" for j in range(m)] for i in range(n)]

    for j in range(1,m+1):
        s[0][j]=s[0][j-1]-2

    for i in range(1, n + 1):
        for j in range(1, m + 1):

            if v[i - 1] == w[j - 1]:
                s[i][j] = s[i - 1][j - 1] + 1

            else:
                heng = s[i][j - 1] -2
                shu = s[i - 1][j] - 2
                mismatch = s[i - 1][j - 1] -2
                s[i][j] = max(heng, shu, mismatch)

            if s[i][j] == s[i - 1][j] - 2:
                Backtrack[i - 1][j - 1] = "↓"

            elif s[i][j] == s[i][j - 1] - 2:
                Backtrack[i - 1][j - 1] = "→"

            elif s[i][j] == s[i - 1][j - 1]+1 or s[i][j] == s[i - 1][j - 1]-2 :
                Backtrack[i - 1][j - 1] = "↘"
    maxscore=max(s[n])
    max_m=m-s[n][::-1].index(maxscore)
    print(maxscore)
    #print(max_m)
    #print(Backtrack)
    #print(s)
    return Backtrack,max_m,n


def OutputLCS(backtrack,v,w,i,j):
    LCS_V=''
    LCS_W=''
    #print(v,w,i,j)

    while i>=0 and j>=0:

        if backtrack[i][j]=="↘":
            LCS_V+=v[i]
            LCS_W+=w[j]
            #print(i)
            i=i-1
            j=j-1
            #print(LCS_V,LCS_W)
        elif backtrack[i][j]== "→":
            LCS_V+="-"
            LCS_W+=w[j]
            j=j-1

        else:
            LCS_W+="-"
            LCS_V+=v[i]
            i=i-1

    #print(i,j)

    return LCS_V[::-1],LCS_W[::-1]




# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



V= input("what is the v string:")
W= input("what is the w string:")
#V="PAWHEAE"
#W="HEAGAWGHEE"

Backtrack,m,n=LCSBackTrack(V, W)
#print(Backtrack,n,m)
print('\n'.join(OutputLCS(Backtrack,V,W,n-1,m-1)))



#what is the v string:GTGTTCGCCCTTACTTACGTCCGGGCGCCCTTAGTATCAATTCTTTACAGGATCGGTTTTCGCGAATCCCCGGTGCGAGAAGTATCAGTTCTCCAGGCGGTGGCAACAGATGTCTCCGTTACCGGGGGGGACCCAATCTGACATTCATCGGCGAGCATACTTACCTGTCTCTTGCAATGGGCAACCCGTGCTAACACAGTGCTAGACGTTCGGCATCAAAAGTCCCGCCGCCGTATCTTGTATGCGCGAATTGGATCGTAAGATGATAAGTCTCGGAAAAACCATGAACTAGCATAATTCTGAACATTTGATCCGGGTGATACCATGATATCTCCGACGGTCGAACTAATCTGAATATACACCAGGTGCGATATGTGAGCGCATACATGGTGATTCCTACCCGATATTTTTAGGGCTTTGGGAGCGAACACTTAAGTTGGAACTAATCCGATATGCGAAAAATCTAGTTTCAGCGACACGGCGGCTTAAACTCCCCATGCCAGGTTCGAGCCACCTGCGCCCGGAATACGGTCTTTGAAAGTCGATCCTGGGGGCCCTCCAGTAACATTGTCCTGGCGCACAAAAGCACTACTGATAGGGGAGTATCTGATAGAATCCCGAGGCTACGAATAAGTTGGGTTGACTAGACTCACGATTGTTTCCAGGCACTAAGTGAGTAAATATCGTAAAGCGAAGATTGCCGTCGCTGCTCGATTCGACGGTTCTGGGCAGAACCGGATCAATCCCGCCACGGAATGCTAGTCGTCACCTGGAGCCGGCAGATGGGGAGCGGCTGGGGTCATAGTCTGGCGAAGAATCAGTCGTACTCTCATAGCCCGATCACTAGC
#what is the w string:TATCCGGTACGATGTCCTAGTCCTACGGACTATGTCGGTTGATCAAGCCGCCGTATTGTGTCCAGCCTATGATGAGTAGATATTGTGAGAGCATGTTGACGACCACACTGTCAGATTCGACGGTTCTAGGCAGGACGTGGATCAATTCCGCTCACAGAAGCTAGGCCATCGAGCAGCCAGCATGGGGGGGGCGTGCTGGGATTTGGTCTGGCGAAGAATAGATCGTATCCGGGCAGAGGGATCGCTATACACAAGAAAATCTAGGTGTTAGTGTGGGGAGGGTACTGACGATTAGAAGCTCGTTCAGTATATTATATACATTGCAGGTACCCTTTTGCCTGGCAGCTCACCTTTCCCAAGCGTTATCTCCTACATCTGCGCGTGCATGGGGGAGTAGGTCACGGTGTTTTGGATTCCTCGAACCCGAGGAGATCTCAAGACACTCAAAAGTTTGTTTTGACCGTAGGGAGATAATGGGTAGTTCGGGTTCCCCGGTCGTAGGGTTCATTTGTCGACTGTCCTTACCCCTGTTTGAGGTAGGCTAAGTAGATGGCCGCGATAGGATGCAGATACCATTGGGTCAGCCGTCAATTGGGCTCTCGCCTATGATGGCCTCATCAGCAAAACACAACCACATGGACAATAGTATGTAATTCTTAGCCGAATGTGGATACACAATCTCATTTACCCGCCTTACTGTGGGGACCCATTTAACGACGAGCTAACCTATTATCTGACCGGAATTTGGGTTCCGCTCAGCGTCCGATCCAGTGTTATTTTTAGTGTAACATCGGTAACTGCCGCCATCTATGGCCGGCAAGACTGCCCGTAGTGTCAAACTTGAGGCACTAGATTGTATGTATGTACGTGGGCGAAACTTTACTTATCTCAGACCGGAGCTGACGTTAATCATAGTAGATGATGTGGTCTCACAGCCAACTGGAGCACGCACGGTGTGCTAGGATCCACA



